name: dockercompose2921749434233730060
services:
  grafana:
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    image: grafana/grafana:10.2.3
    networks:
      backend: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 3000
        published: "3000"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\grafana.ini
        target: /etc/grafana/grafana.ini
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\datasource.yml
        target: /etc/grafana/provisioning/datasources/datasource.yaml
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\dashboard.yml
        target: /etc/grafana/provisioning/dashboards/dashboard.yml
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\dotnet-otel-dashboard.json
        target: /etc/grafana/provisioning/dashboards/dotnet-otel-dashboard.json
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\logs-dashboard.json
        target: /etc/grafana/provisioning/dashboards/logs-dashboard.json
        bind:
          create_host_path: true
  jaeger:
    command:
      - --query.ui-config=/etc/jaeger/jaeger-ui.json
      - --collector.otlp.enabled=true
      - --prometheus.server-url=http://prometheus:9090
      - --prometheus.query.support-spanmetrics-connector=true
    environment:
      METRICS_STORAGE_TYPE: prometheus
      PROMETHEUS_QUERY_NORMALIZE_CALLS: "true"
      PROMETHEUS_QUERY_NORMALIZE_DURATION: "true"
    image: jaegertracing/all-in-one:1.52
    networks:
      backend: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 16686
        published: "16686"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\jaeger-ui.json
        target: /etc/jaeger/jaeger-ui.json
        bind:
          create_host_path: true
  otel-collector:
    command:
      - --config
      - /etc/otelcol/otel-collector-config.yml
    depends_on:
      jaeger:
        condition: service_started
        required: true
    image: otel/opentelemetry-collector-contrib:0.91.0
    networks:
      backend: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 4317
        published: "4317"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\otel-collector-config.yml
        target: /etc/otelcol/otel-collector-config.yml
        bind:
          create_host_path: true
  prometheus:
    image: prom/prometheus:v2.48.1
    networks:
      backend: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 9090
        published: "9090"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Aman\Desktop\OTEL_SPM\Configs\prometheus.yml
        target: /etc/prometheus/prometheus.yml
        bind:
          create_host_path: true
  spm:
    build:
      context: C:\Users\Aman\Desktop\OTEL_SPM
      dockerfile: SPM/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "80"
      ASPNETCORE_URLS: https://+:443;http://+:80
      ErrorRate: "0.5"
      OTEL_EXPORTER_JAEGER_AGENT_HOST: jaeger
      OTEL_EXPORTER_JAEGER_AGENT_PORT: "6831"
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      ServiceName: spm-1
    image: spm
    networks:
      backend: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 80
        published: "8081"
        protocol: tcp
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Aman\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Aman\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  backend:
    name: dockercompose2921749434233730060_backend